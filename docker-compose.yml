version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - SQLITE_DB_PATH=${SQLITE_DB_PATH}
    env_file:
      - .env
    ports:
      - "${CONTAINERPORT_AGENTLOGGERDASHBOARD:-3000}:${CONTAINERPORT_AGENTLOGGERDASHBOARD:-3000}"
      - "${CONTAINERPORT_API:-8000}:${CONTAINERPORT_API:-8000}"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      # The port for the database MCP server, used internally by the API proxy
      - CONTAINERPORT_MCP=${CONTAINERPORT_MCP}
      # The base URL for the backend, as seen from the container itself
      - BACKEND_BASE_URL=${BACKEND_BASE_URL}
      - SQLITE_DB_PATH=${SQLITE_DB_PATH}
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c "python mcp_servers/database_mcp_server/database_setup_script.py && 
               /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf"
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${CONTAINERPORT_MYSQL:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    ports:
      - "${CONTAINERPORT_QDRANT:-6333}:${CONTAINERPORT_QDRANT:-6333}"
      - "6334:6334"
    volumes:
      - ./data:/qdrant/storage:z

volumes:
  mysql_data: 